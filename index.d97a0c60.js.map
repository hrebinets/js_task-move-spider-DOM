{"mappings":"ACEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAS,SAAS,aAAa,CAAC,WAChC,EAAO,SAAS,aAAa,CAAC,SAEpC,GAAI,EAAE,MAAM,CAAC,OAAO,CAAC,SAAU,CAC7B,IAAM,EAAW,EAAK,qBAAqB,GACrC,EAAc,EAAO,WAAW,CAChC,EAAe,EAAO,YAAY,CAElC,EAAY,iBAAiB,GAC7B,EAAiB,SAAS,EAAU,gBAAgB,CAAE,IACtD,EAAmB,SAAS,EAAU,iBAAiB,CAAE,IAE3D,EAAU,EAAE,OAAO,CAAG,EAAS,IAAI,CACnC,EAAU,EAAE,OAAO,CAAG,EAAS,GAAG,CAEtC,EAAU,KAAK,GAAG,CAChB,EACA,KAAK,GAAG,CACN,EAAU,EAAc,EACxB,EAAS,KAAK,CAAG,EAAc,IAInC,EAAU,KAAK,GAAG,CAChB,EACA,KAAK,GAAG,CAAC,EAAS,EAAS,MAAM,CAAG,EAAe,IAGrD,EAAO,KAAK,CAAC,IAAI,CAAG,GAAW,MAAA,CAAR,EAAQ,MAC/B,EAAO,KAAK,CAAC,GAAG,CAAG,GAAW,MAAA,CAAR,EAAQ,KAChC,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"click\", function(e) {\n    var spider = document.querySelector(\".spider\");\n    var wall = document.querySelector(\".wall\");\n    if (e.target.closest(\".wall\")) {\n        var wallRect = wall.getBoundingClientRect();\n        var spiderWidth = spider.offsetWidth;\n        var spiderHeight = spider.offsetHeight;\n        var wallStyle = getComputedStyle(wall);\n        var wallBorderRght = parseInt(wallStyle.borderRightWidth, 20);\n        var wallBorderBottom = parseInt(wallStyle.borderBottomWidth, 20);\n        var xCoords = e.clientX - wallRect.left;\n        var yCoords = e.clientY - wallRect.top;\n        xCoords = Math.max(0, Math.min(xCoords - spiderWidth / 2, wallRect.width - spiderWidth - wallBorderRght));\n        yCoords = Math.max(0, Math.min(yCoords, wallRect.height - spiderHeight - wallBorderBottom));\n        spider.style.left = \"\".concat(xCoords, \"px\");\n        spider.style.top = \"\".concat(yCoords, \"px\");\n    }\n});\n\n//# sourceMappingURL=index.d97a0c60.js.map\n","'use strict';\n\ndocument.addEventListener('click', (e) => {\n  const spider = document.querySelector('.spider');\n  const wall = document.querySelector('.wall');\n\n  if (e.target.closest('.wall')) {\n    const wallRect = wall.getBoundingClientRect();\n    const spiderWidth = spider.offsetWidth;\n    const spiderHeight = spider.offsetHeight;\n\n    const wallStyle = getComputedStyle(wall);\n    const wallBorderRght = parseInt(wallStyle.borderRightWidth, 20);\n    const wallBorderBottom = parseInt(wallStyle.borderBottomWidth, 20);\n\n    let xCoords = e.clientX - wallRect.left;\n    let yCoords = e.clientY - wallRect.top;\n\n    xCoords = Math.max(\n      0,\n      Math.min(\n        xCoords - spiderWidth / 2,\n        wallRect.width - spiderWidth - wallBorderRght,\n      ),\n    );\n\n    yCoords = Math.max(\n      0,\n      Math.min(yCoords, wallRect.height - spiderHeight - wallBorderBottom),\n    );\n\n    spider.style.left = `${xCoords}px`;\n    spider.style.top = `${yCoords}px`;\n  }\n});\n"],"names":["document","addEventListener","e","spider","querySelector","wall","target","closest","wallRect","getBoundingClientRect","spiderWidth","offsetWidth","spiderHeight","offsetHeight","wallStyle","getComputedStyle","wallBorderRght","parseInt","borderRightWidth","wallBorderBottom","borderBottomWidth","xCoords","clientX","left","yCoords","clientY","top","Math","max","min","width","height","style","concat"],"version":3,"file":"index.d97a0c60.js.map"}